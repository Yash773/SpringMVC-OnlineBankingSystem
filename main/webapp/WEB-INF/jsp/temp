	
  User user = (User) model.get("user");
  List<Transactions> transactions = (List<Transactions>) model.get("transactions");
 
  doc.add(new Paragraph("Recommended books for Spring framework"));
	
	PdfPTable table = new PdfPTable(5);
	table.setWidthPercentage(100.0f);
	table.setWidths(new float[] {3.0f, 2.0f, 2.0f, 2.0f, 1.0f});
	table.setSpacingBefore(10);
	
	// define font for table header row
	com.lowagie.text.Font font = FontFactory.getFont(FontFactory.HELVETICA);
	font.setColor(BaseColor.WHITE);
	
	// define table header cell
	PdfPCell cell = new PdfPCell();
	cell.setBackgroundColor(BaseColor.BLUE);
	cell.setPadding(5);
	
	// write table header 
	cell.setPhrase(new Phrase("Book Title", font));
	table.addCell(cell);
	
	cell.setPhrase(new Phrase("Author", font));
	table.addCell(cell);

	cell.setPhrase(new Phrase("ISBN", font));
	table.addCell(cell);
	
	cell.setPhrase(new Phrase("Published Date", font));
	table.addCell(cell);
	
	cell.setPhrase(new Phrase("Price", font));
	table.addCell(cell);
	
	// write table row data
	for (Book aBook : listBooks) {
		table.addCell(aBook.getTitle());
		table.addCell(aBook.getAuthor());
		table.addCell(aBook.getIsbn());
		table.addCell(aBook.getPublishedDate());
		table.addCell(String.valueOf(aBook.getPrice()));
	}
	
	doc.add(table);

	table.addCell("TransactionID");
	table.addCell("Sender");
	table.addCell("Reciever");
	table.addCell("Amount");
	//table.addCell("Date");
	table.addCell("Timestamp");
	table.addCell("Remark");
  
  for(Transactions t:transactions)
  {
	  table.addCell(String.valueOf(t.getTransactionID()));
	  table.addCell(String.valueOf(t.getSender()));
	  table.addCell(String.valueOf(t.getRecipient()));
	  table.addCell(String.valueOf(t.getAmount()));
	  //table.addCell(String.valueOf(t.getDate()));
	  table.addCell(String.valueOf(t.getTimestamp()));
	  table.addCell(String.valueOf(t.getRemark()));
  }
  
  document.add(table);
